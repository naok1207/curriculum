■ IT
    IT: Information Technology 情報技術 (コンピュータやソフトウェアのこと)
    ICT: Information and Communication Technology 情報通信技術 (情報技術の活用方法のこと)
        例: 在庫管理のシステムやコミュニケーションツールなど
    IoT: Internet of Things モノのインターネット (身の回りのあらゆるモノがインターネットにつながる仕組みのこと)
        例: 自動運転(車がインターネットにつながる), Apple Watch(時計がインターネットにつながる)


■ OS
    OS: アプリやでデバイスを動かすための基本のソフトウェア
        例: Windows, Mac, ios, android, linux, centOS
    Windows: Microsoft社が開発し、日本で広く普及しているPC用のOSの一つ。現在のバージョンはWindows10
    macOS (Mac OS X): Apple社が開発したPC用のOSであり、AppleのPCであるMac専用のOS。現在のバージョンはCatalina
    UNIX: OSの一種で、現存する中でもっとも古いOSのひとつ
        特徴: ライセンスが必要
    Linux: OSの一種でUnixライクなOSだがUnixとは全く別のプログラムで作られている
        特徴: 無料, オープンソース, 改変自由

■ 言語・環境
    マークアップ／フロントエンド
        マークアップ: Webページのテキストに意味づけすることであり、htmlやxmlといった言語を使い、タグを用いて記述する。
        フロントエンド: ユーザと直接データのやり取りを行う要素のことであり、webブラウザ側(クライアント側)を指す。
            HTML: Hyper Text Markup Language webページを作成するために開発されてた言語であり、webページの文章に意味を持たせるためのマークアップ言語の一つ
            CSS: Cascading Style Sheet webページのスタイルを指定するための言語。HTMLから文書構造とスタイル指定を分離するためのモノ。HTMLタグを駆使して見た目を整えることもできるが、HTMLは文章に意味を持たせるための言語であり見栄えよくレイアウトできたとしても本来の意味とは合わないものができてしまう可能性があるためCSSを用いる
            JavaScript: 動的にコンテンツを更新したり、マルチメディアを管理したり、その他多くのことができるスクリプト言語。クライアントサイド言語(フロントエンド)
    サーバーサイド: Web製作においてサーバ側を指す。フロントエンドから入力されたデータなどをサーバ情のシステムにより処理する。
        .NET（C#, VB): .NET FrameWorkの略称 各種のライブラリや基盤となるフレームワークなどもあわせて提供されており、それらをすべて含めた統合開発環境のこと
            C#: .NET FrameWork上で動くプログラミング言語。Windowsのアプリケーションを作る際に使われる。デスクトップアプリだけでなくスマホアプリ、ウェブアプリも作成することができる。
            VB: Visual Basic Windowsで動くプログラムを作るためのプログラミング言語
        Java: 処理速度が早くプラットフォーム（OS）に関係なく動作するプログラミング言語
            Java SE: Java Standard Edition Javaの基本操作をまとめたもの。パソコン上で動作するゲームや便利なソフトを作成すつことができる。
            Java EE（Jakarta EE）: Java Enterprise Edition JavaSEを元にしてサーバーサイドの機能を追加したもの。主にWebアプリケーションを開発する際に用いられる。
        Perl: Practial Extraction and Report Language プログラミング言語の一つ。古き良きスクリプト言語。
        PHP: Personal Home Page Web開発でよく使用されるスクリプト言語 以前はfacebookがPHPを用いて運用されていた
        Ruby: まつもとゆきひろ氏により開発されたオブジェクト指向スクリプト言語。ruby on rails というWebアプリケーションフレームワークがある。 Githubは ruby on rails を用いて運用されている。

■ サーバーソフト
    Webサーバーソフトウェア: ただのコンピュータをWebサーバーとして用いるために使用する専用ソフトウェア
    Apache: Apache HTTP Server Webサーバーソフトウェアの一つ。
    nginx: Webサーバーソフトウェアの一つ。大量のデータ配信や大量同時接続に耐えることを目的に設計された。Apacheに比べつ同時接続台数が10~100倍ぐらい
    IIS: Internet Information Services Windows用のサーバーソフトウェア

■ SQL
    データベースとはデータの集合を指す言葉であって、形のない概念的なものです。その概念的なデータベースをコンピュータソフトウェア上で操作／管理できるようにしたものをデータベース管理システム（DataBase Management System：DBMS）
    SQL: シークェル データベース言語の一種 リレーショナルデータベースに蓄積したデータをそうさそたり定義するためのプログラム言語。
        DB2: IBM社が開発・販売するリレーショナルデータベース管理システム(RDBMS)
        MySQL: 世界で最も利用されているデータベース管理システム
            Maria DB: データベース管理システムの一つ mysqlから派生したもの
        Oracle DB: Oracle社が開発・販売するリレーショナルデータベース管理システム(RDBMS)
        PostgreSQL: オープンソースのリレーショナルデータベース管理システム(RDBMS)
        SQLite: 軽量コンパクトなリレーショナルデータベース管理システム データは単一のディスクファイルに格納される
        SQL Server: Microsoft SQL Server Microsoftのデータベース管理システム
    CRUD: ユーザインターフェースが備えるべき機能であるCreate(生成)・Read(読取)・Update(更新)・Delete(削除)の略称
    トランザクション: 一連の情報処理の一単位
        コミット: 処理や変更などを確定、反映させるといった意味で使われる
        ロールバック: システム障害やデータの喪失、破損などが起きた際に、以前の正常に動作していた状態に戻して復旧を試みること
    排他制御（排他ロック）: 共有資源（データやファイル）に対して複数のアクセスが見込まれる場合に、同時アクセスにより不整合が発生することを防ぐため、あるトランザクションが共有資源（データやファイル）にアクセスしている時は他トランザクションからはアクセスできないようにして直列に処理されるように制御すること
        楽観ロック: めったなことでは他者との同時更新は起きないであろう、という楽観的な前提の排他制御。データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と同じ状態であることを確認してから更新することで、データの整合性を保証する方式
        悲観ロック: 他者が同じデータに頻繁に変更を加えるであろう、という悲観的な前提の排他制御。更新対象のデータを取得する際にロックをかけることで、他のトランザクションから更新されないようにする方
    実行計画: ユーザが発行した問い合わせに基づきデータベース管理システム (DBMS) が内部的に生成する情報であり、これによりDBMSの行うデータ処理がプログラム的に表される
    チューニング: 性能の悪いSQLを発見し、その処理過程を改善すること
    パフォーマンス: データベースの処理の速さ・性能
    スロークエリ: 時間のかかっているSQL(遅いSQL)のこと
    クエリログ: クライアントからの MySQL Server への接続・接続解除の情報、およびクライアントから実行された全ての SQL クエリを出力してくれるログ
    IDE（統合開発環境）: テキストエディタ、コンパイラ、デバッガを1つにまとめたエンジニアの開発のためのツール
        Eclipse: 統合開発環境の一つ
        NetBeans: プロジェクト管理機能や入力支援機能を備えたオープンソースのIDE
        SpringToolSuite: STS Java用の統合開発環境 
    DBツール: データベース管理タスクに使用できるツール
        A5:SQL Mk-2: データベース開発において生産性を向上させるべく開発されたSQL開発ツール
        pgAdmin: GUIによるPostgreSQLの管理ツール
        DBeaver: データベースを操作する必要があるすべての人々のための無料のマルチプラットフォームデータベースツール
        MySQL Workbench: データ・モデリング、SQL 開発、およびサーバー設定、ユーザー管理、バックアップなどの包括的な管理ツール
        Sequel Pro: データベースをExcelのような表で確認・編集をすることができるMac専用のアプリ
        TeamSQL: DBをGUIで管理するためのソフトウェア

■ 肩書
    PM: プロジェクトマネージャー システム開発に関わる一連の業務に精通している必要がある
    PL: プロジェクトリーダー システムの構築・導入プロジェクトにおいて、プロジェクトチームを管理・統括する
    PG（PE）: コンピュータシステムのプログラムを作る
    SE: 顧客の要求から仕様を決定し、大まかな設計をするまでの情報システム開発における上流工程を担当するひと
    デザイナー: 様々なものをデザインする
    エンジニア: 工学（エンジニアリング）に関する専門的な知識やスキルを持った人材
        フロントエンド・エンジニア: フロント側を担当するエンジニア
        サーバーサイド・エンジニア: サーバー側で動作するプログラムの開発やデータ処理などをおこなうエンジニア バックエンドエンジニアよりもサーバ全体を担当するので広義の意味を持っている
        バックエンド・エンジニア: プログラムの開発からWebサーバー、データベースといった環境整備まで幅広く担当するWeb系の技術者

■ UI（ユーザーインターフェース）
    UI: ユーザーインターフェース ユーザの目に見える部分全体
        CUI: キーボードから入力されるコマンドでオペレーションシステム上の操作を行うインターフェース
        GUI: コンピューターの画面上に表示されるウィンドウやアイコン、ボタン、プルダウンメニューなどを使い、マウスなどのポインティングデバイスで操作できるインターフェース

■ ファイル／ディレクトリ
    ファイル: 情報を一まとまりとして扱う扱うための単位
    拡張子: ファイルの種類や形式を識別するために設定された文字列
    ディレクトリ: ファイルを整理・分類することのできる保管場所
        ルート・ディレクトリ: 階層型ファイル構造における最上階層のディレクトリ
        カレント・ディレクトリ: ユーザが現時点で操作を行っているディレクトリ
    パス: コンピュータ内で特定のデータの所在を表す文字列
        絶対パス: ルートディレクトリから目的ファイルまでのパスを示す
        相対パス: ユーザが作業している地点から目的ファイルまでのパスを示す

■ ネットワーク
    LAN: Local Area Network ローカルネットワーク (家庭内や社内などのプライベートネットワークのこと)
    WAN: Wide Area Network 広域通信網 市街地から郊外、県外、海外に広がった広域のネットワークのことで、点在するLAN（Local Area Network）とLANを結ぶ公衆網であり、世界規模で扱っているWANがインターネット
    クライアント: サーバー側に処理を依頼する側のコンピュータのこと データを使用している側
    サーバー: クライアントから依頼された処理をする側のコンピュータのこと データを提供している側

■ 各種プロトコル
    HTTP: WebサーバとWebクライアントの間でデータの送受信を行うために用いられるプロトコル（通信規約）
    FTP: ファイル転送プロトコル ファイルをネットワーク上のある場所から別の場所に移動するための基本的な手順
    HTTPS: HTTP over SSL/TLS httpに暗号化技術を適用したもの
    SSL: Secure Socket Layer インターネット上におけるウェブブラウザとウェブサーバ間でのデータの通信を暗号化し、送受信させる仕組みのこと
    SSH: Secure Shell リモートコンピュータと通信するためのプロトコル
    ポート、ポート番号: TCP/IP通信において、 コンピュータが通信に使用するプログラムを識別するための番号
    HTTP、FTP、SSHの各ポート番号:
        HTTP: 80
        FTP:
            データ: 20
            制御: 21
        SSH: 22
    ファイアウォール: 企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るための“防火壁”
    TCP: インターネットにおいて標準的に利用されているプロトコル コネクション型通信（通信開始前に相手との間で仮想的な通信路を確保する）

■ IPアドレス
    IPアドレス
        グローバルIPアドレス: インターネットに接続する機器が使用できるIPアドレス インターネット上でIPアドレスは重複してはいけない
        プライベートIPアドレス: LANなどの企業内ネットワークに存在する端末が、自由に使用できるIPアドレス

■ ドメイン
    ドメイン: インターネット上の住所」のことで、Webサイトがどこにあるかを判別する情報として利用する
    DNS: Domain Name System インターネット上でドメイン名を管理・運用するために開発されたシステム
    VPN: Virtual Private Network 離れた場所の間を仮想的な専用線でつないで安全なデータ通信を実現する仕組み
    ブリッジ: ネットワーク上で、ケーブルに流れるデータの中継機能を持った装置のこと リピータ、ルータ、ゲートウェイなど
    プロキシサーバー: インターネットに直接接続できないコンピューターに代わり、インターネットに接続し、Webサイトへのアクセスなどを行うサーバー

■ 電子メール
    SMTP: Simple Mail Transfer Protocol メールを相手のメールサーバーまで届ける仕組み
    POP: Post Office Protocol メールソフトが自動的にメールサーバーにアクセスしてメールをダウンロード
    IMAP: Internet Message Access Protocol メールを取り込むための手順であり、メールをサーバーからコピーしたものをダウンロードするためサーバー内のメールは消えない

■ セッションとクッキー
    セッション: Webサイトにアクセスして行う一連の行動
    クッキー: Webページなどで、ブラウザに情報を保存するための仕組みの1つ
    キャッシュ: 一度アクセスしたサイトのデータをブラウザで一時的に保管し、次回より同じページにアクセスした際の表示を速くする仕組み

■ DB（データベース）について
    インデックス: 検索エンジンのデータベースに、ウェブページが登録されること

■ テストについて
    テスト: できる限りバグをつぶし、仕様どおりに動くことを確かめてからリリース（納品）するためのもの
    フロー: データフローテスト コンピュータプログラムの制御パス中の変数の状態変化（定義・参照・消滅）に注目して、エラー検出を図る静的テスト技法

■ チケット管理ツール
    チケット管理: タスクを「チケット」として管理する方法
    タスク: 作業内容や緊急度、期日

■ バージョン管理
    Git: プログラムソースなどの変更履歴を管理する分散型のバージョン管理システムのこと
    SVN: Subversion オープンソースのバージョン管理システムの一つ 複数の開発者が共同で一つのソフトウェアを開発する際などに、ソースコードやドキュメントを管理するのに用いられる
    デグレ: デグレード degrade 新しいバージョンのソフトウェアの品質が、以前より悪くなること 新しいファイルなどを古い内容で上書きしてしまい、更新内容が失われること
    マージツール: チーム開発にいて修正箇所のコンフリクトしたり不整合が起こった際に比較してマージする際に手戻りが発生するなどして作業時間が大幅に増えてしまうなどの非生産的な作業を効率化させるためのツール

■ 追加
    LAMP環境: 「Linux」＋「Apache」＋「Mysql」＋「PHP (または Ruby)」の組み合わせのこと。サーバー構築費用が非常に安く済むため、LAMP環境を採用する企業が多い。# よく見たら全部無償じゃないですか...